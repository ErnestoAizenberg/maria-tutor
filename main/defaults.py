from .models import Teacher, Page

def create_default_pages(teacher_slug):
    """
    Creates default pages for a teacher if they don't already exist.

    Args:
        teacher_slug (str): The slug of the teacher to create pages for

    Returns:
        dict: Information about the created pages

    Raises:
        ValueError: If teacher is not found
    """
    # Get teacher or raise error
    teacher = Teacher.objects.filter(slug=teacher_slug).first()
    if not teacher:
        raise ValueError(f"Teacher with slug '{teacher_slug}' not found")

    # Default pages configuration
    pages_config = {
        "contacts": {
            "name": "–ö–æ–Ω—Ç–∞–∫—Ç—ã",
            "show_in_navbar": True,
            "show_in_footer": True,
            "title": f"–ö–æ–Ω—Ç–∞–∫—Ç—ã {teacher.name} - –°–≤—è–∑—å, Telegram-–∫–∞–Ω–∞–ª—ã –∏ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ",
            "meta_description": f"–ö–∞–∫ —Å–≤—è–∑–∞—Ç—å—Å—è —Å {teacher.name}. {teacher.status}",
            "hero_title": f"–°–≤—è–∂–∏—Ç–µ—Å—å —Å {teacher.name}",
            "hero_sub_title": "–í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± —Å–≤—è–∑–∏",
        },
        "lessons": {
            "name": "–£—Ä–æ–∫–∏",
            "show_in_navbar": True,
            "show_in_footer": False,
            "title": f"–°—Ç–æ–∏–º–æ—Å—Ç—å –∏ —Ñ–æ—Ä–º–∞—Ç—ã –∑–∞–Ω—è—Ç–∏–π ‚Ä¢ {teacher.name} | {teacher.status}",
            "meta_description": f"–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–æ–≤ —Å {teacher.name}",
            "hero_title": f"–£—Ä–æ–∫–∏ —Å {teacher.name}",
            "hero_sub_title": "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–π",
        },
        "about_me": {
            "name": "–û–±–æ –º–Ω–µ",
            "show_in_navbar": True,
            "show_in_footer": True,
            "title": f"–û–±–æ –º–Ω–µ | {teacher.name} - {teacher.status}",
            "meta_description": f"–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ {teacher.name}. {teacher.status}",
            "hero_title": teacher.name,
            "hero_sub_title": getattr(teacher, 'description', ''),
            "og_type": "profile",
            "og_title": f"–û–±–æ –º–Ω–µ - {teacher.name} | {teacher.status}"
        },
        "reviews": {
            "name": "–û—Ç–∑—ã–≤—ã",
            "show_in_navbar": True,
            "show_in_footer": False,
            "title": f"üî¨ {teacher.name} | –û—Ç–∑—ã–≤—ã —É—á–µ–Ω–∏–∫–æ–≤ –æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ",
            "meta_description": f"–û—Ç–∑—ã–≤—ã —É—á–µ–Ω–∏–∫–æ–≤ –æ –∑–∞–Ω—è—Ç–∏—è—Ö —Å {teacher.name}",
            "hero_title": f"–û—Ç–∑—ã–≤—ã –æ {teacher.name}",
            "hero_sub_title": f"–°—Ä–µ–¥–Ω–∏–π —Ä–µ–π—Ç–∏–Ω–≥: {teacher.aggregate_rating}/5",
            "og_title": f"{teacher.name} | –û—Ç–∑—ã–≤—ã —É—á–µ–Ω–∏–∫–æ–≤ –æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ",
            "og_site_name": f"{teacher.status} | {teacher.name}",
        },
        "articles": {
            "name": "–°—Ç–∞—Ç—å–∏",
            "show_in_navbar": False,
            "show_in_footer": True,
            "title": f"–°—Ç–∞—Ç—å–∏ {teacher.name} | {teacher.status}",
            "meta_description": f"–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Ç–∞—Ç—å–∏ –∏ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –æ—Ç {teacher.name}",
            "hero_title": f"–°—Ç–∞—Ç—å–∏ –æ—Ç {teacher.name}",
            "hero_sub_title": "–ü–æ–ª–µ–∑–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏ —Å–æ–≤–µ—Ç—ã",
        },
    }

    created_pages = []

    for slug, config in pages_config.items():
        # Check if page already exists
        if not Page.objects.filter(teacher=teacher, slug=slug).exists():
            # Generate common SEO fields
            seo_fields = {
                "og_title": config.get("og_title", config.get("title", "")),
                "og_description": config.get("meta_description", ""),
                "og_url": f"/{teacher.slug}/{slug}",
                "twitter_title": config.get("title", ""),
                "twitter_description": config.get("meta_description", ""),
            }

            try:
                # Create the page
                page = Page(
                    teacher=teacher,
                    slug=slug,
                    is_published=True,
                    **config,
                    **seo_fields,
                )
                page.save()
                created_pages.append(page)
            except Exception as e:
                # Log error and continue with other pages
                print(f"Error creating page {slug} for teacher {teacher.name}: {str(e)}")

    return {
        "teacher": teacher.name,
        "created_pages": [p.name for p in created_pages],
        "total_created": len(created_pages),
    }
